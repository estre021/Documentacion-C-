<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBw0NDQ0NDQ0NDQ0NDQ0HDQ0HDQ8ICQcNFREWFhURExMY
        HSggGBolGxMVITEhMSkrLi4uFx8zODMsNygtLiv/2wBDAQoKCg0NDRcPDxcrHRUdKystLSstKysrLS0t
        KysrLS0rLS0tLS0tLS0rKy03Ny0rLTcrLS0tKy0rNzctKysrKyv/wAARCACuASIDASIAAhEBAxEB/8QA
        GAAAAwEBAAAAAAAAAAAAAAAAAQIDAAf/xAAcEAEBAQEBAQEBAQAAAAAAAAAAAQIRElFhgXH/xAAZAQAD
        AQEBAAAAAAAAAAAAAAABAgMEAAX/xAAaEQEBAQEBAQEAAAAAAAAAAAAAAQIREgMT/9oADAMBAAIRAxEA
        PwDk8t+08t+1PJ49XIU+bftUlv2p5O0YTqmdX7VJb9qcUy1YSqmbftVzb9qWVMtnziGlc39qst+1LKmW
        3CGlc2/afNv1PKmVYhpTNv2qS37U8qZMhpSW/afP9JFMuZ9U+TTv0IaQENaC9+lp6WuHNS1/SX/afSdF
        fNJq39TvftPSacvlPV/aTVv2n0notXynq37UtW/q2kdo7i+Sav7Ut2/arpHTFtoyS2/qerftUqemTa0J
        bf1O2/afRKy7Whbb9pLq/aakrNpSN2/awMmI5OSHiuS0+TkyeNGE6pFIllTLVhLSuVMp5Uy2fNDSuVIl
        hXLbhDSmVMpZVyrENKRSVGKZMhpbKkRzVM1zPqK5PKlKboIah9Ulrei2udnJdJ01pNUWjMLUtH1SVy+S
        aT0fSei1oyTSWlNJ6R2tkmktKaS0xfRoySpaV0lpk2tklJo9JWXasJSU+iVm0rAZmTEYbJDxTIVSHicP
        GjKdUyplLKmWrFSquVMoxTNa8VHS2VYjmqZrZioaisUzUofNWiGotmmlTzTyniGopmqSoymmnI6i0pvS
        Urdcncq9LdF6HXOmRtTta0toq5yGqW0bSWgtmF1U6bVTtLatmF0nqntTqH0q+YTVS0e1OsW6vkuk9H0n
        pk3VslqdPU6zaqsDRKakZ9KQOsDJmNDQkpobNCqQ+anKfLRmp1SHicPmtGKlVYpmpZPK14qWotmqZqOa
        fNa8aR1F808RzVJWnNQ1FZTzSMp5T9SsVlNEpTTQ9SuVJR6nND0S+T9C0vQunddMmtC0vot0HTzI6pLQ
        tLaFqkgWl1R1U9UmqrmBqp6o2ktZd6XzC6qeqa1PVZN1bMLaS02qRl3VoXVJTaJWbVUhaWjS1DSkBgZM
        ww6cPDZoU8p4lDxfNJVYaVPNPGjNSsVh4jmqZrRnSdiuapmoynzWnGkbFpTyoynlasbS1laaPKjKaVaV
        KxWU0qUppTdJYp0epdH0PS+VOh0noOu67ye0tpbQug6aQ1pbS2lui3R5kdVO1rSaqO9rZy1qem1S2su9
        KyBanTWp6rNvSsgUuqNJqs2qpIWltG0trPqqwpbRtLUdU8ZgFM3ANCQ0GUKc8pIMWzSVSU8qcppV80li
        kp81OGlXzpOxaU0qUppWjOk7Fs080jKaVfO07laaPNISnml87TuVZo0qMpuqzZLlSaH0l6H0b1C+VPQX
        RPQeneo7yp0t0ToXRbs0ya0tpbotqWtnmTXSeq10Woa2pI1pLWtLaz60pIFpKNpbUNaUkDVJaNpKhqqS
        BaWiW1DVPAoVgtRtPA6xWJ03BlMQ0oyhTw0JKaVSUthjypmi2aSxWU0qUp5Vs6JYpKaVPorZ0SxaU0qM
        ppVpolispppKU0qs2S5VlHqXRlUmy+VfTekuj6N+hfKnpvSfoPTv0Hyp0LSegtLdj5NdBaXpbU7s0ya0
        t0W0tqOtnkG0lrBalrR5GtJa1pbUdaPI1pbWpajqnjWlta0KjqngEo2glaeMDMXosMKLpXHlNCSmikpa
        eU0TlNKpKSw5pU5RlVmi2KymlSlNKrNEsV6PU5TSqTRbDymlT6PVJsvFJRlS6PTzZeK+m9JdHpvbvKnp
        vSfoOh7d5U6FpOh0LseGuguit0l2PBC0LS2p3RpBtLaFpbUro8g2lCgndGkGlta0tqWqaRrS2tSpWnka
        gwEtMLAxeuYSQzpREZQY0oWKQZUzSqSl4pKMTNKeaLYcSSjKpNF4pNDKnKMqk0WxX0MqXoenmi8V63U+
        j03oOKdbqfR9D6Dh+t0nQ670PD9bpPQdD07h7QtJ6Dpbo3DdLdBaFqd0PB6AWtaS6NxgtC0qdppBtCha
        Ulpo1oMydpmC1iktFusAgIDKDBK44klNDygIwGNKB5RIPTylsPKMpOj000Fh+jKTo+jzReH6PSdHp5oO
        GYo9H0HDdbpOt0fTuH63SdHrvTuD1g6FD07gt0OhaW6Hg2h0OhaW6Hg9C0A6S03BDoWgS0eN0GAtphCt
        S2ktFrQZi2izMxRAQZzhHoMaUDSiUZTSgZgE3QEelE3XcN0ekY3S8OPSSj0eu4brdL0TdDhut0rO9Bw3
        W6VnencHrdAOh0eG6AdCh13DdDpWDo8brAxem4zAxbXMFa0C2jxgZi2iwMxRZmYB4//Z
</value>
  </data>
</root>